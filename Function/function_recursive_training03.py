# 解决猴子吃桃问题
# 猴子第一天摘下若干个桃子,当即吃了一半,还不过瘾,又多吃了一个。
# 第二天早上又将剩下的桃子吃掉一半,又多吃了一个。以后每天早上都吃前一天剩下的一半零一个。
# 到第10天早上想吃时,只剩下一个桃子了。求第一天共摘多少个桃子。
# 思路：
      假设猴子摘了x个桃

# d1	x//2 - 1
# d2	d1//2 - 1
# d3	d2//2 - 1
# ...
# d9	d8//2 - 1
# d10	1

# 示例：（Wayne）

def peach(days=10):
    if days == 1:
        return 1
    return (peach(days-1)+1)*2

print(peach())

# 注意这里必须是10,因为return (peach(days-1)+1)*2立即拿不到结果
# 必须通过再一次进入函数时判断是不是到了最后一天。
# 也就是当前使用的值是由下一次函数调用得到,所以要执行10次函数调用


#-------------------------------------------------------------------
# 换种方式表达
def peach(days=1):
    if days == 10:
        return 1
    return (peach(days+1)+1)*2

print(peach())


#-------------------------------------------------------------------
#示例：（其他）
def peach(day=9, num=1):
    num = 2 * (num + 1)
    day -= 1
    if day == 0:
        return num
    return peach(day, num)

print(peach())


#-------------------------------------------------------------------
def monkey(n):
    if n == 1:
        return 1
    return 2 * monkey(n - 1) + 2

peach = monkey(10)
print(peach)
