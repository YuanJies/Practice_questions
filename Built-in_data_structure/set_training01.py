# 共同好友
# 	你的好友A、B、C，他的好友C、B、D，求共同好友

# 交集问题：{'A','B','C'} & ({'B','C','D'})

a = {'A','B','C'}
b = {'B','C','D'}
a & b	


#---------------------------------------------------------------------------
# 微信群提醒
# 	XXX与群里其他人都不是微信朋友关系

# 并集：userid in (A | B | C) == False,
# A、B、C等是微信好友的并集,用户ID不在这个并集中,说明他和任何人都不是朋友	

userid = {'aa','bb','cc'}    # xxx的好友列表
A = {'dd','ee'}
B = {'ff','gg'}
C = {'hh','jj'}
userid in (A | B | C)


#---------------------------------------------------------------------------

set1 = {'A','B','C'}    # xxx的好友列表
set2 = {'e','f','D'}    # 某群的成员列表
set3 = set1 & set2
if set3 == set():
    print("XXX与群里其他人都不是微信朋友关系")
else:
    print("XXX与群里{}是微信朋友关系".format(set3))
    
    
#---------------------------------------------------------------------------
# 权限判断
# 有一个API,要求权限同时具备A、B、C才能访问,用户权限是B、C、D,判断用户是否能够访问该API

# API集合A,权限集合P
# A - P = set() , A - P 为空集,说明P包含A
# A.issubset(P) 也行，A是P的子集也行
# A & P = A 也行


A = {'A','B','C'}
P = {'B','C','D'}
if A - P == set():
    print("有权限")
else:
    print("没有权限")


#---------------------------------------------------------------------------

A = {'A','B','C'}
P = {'B','C','D'}
if A <= P:
    print("有权限")
else:
    print("没权限")
	
	
#---------------------------------------------------------------------------

A = {'A','B','C'}
P = {'B','C','D'}
if A & P == A:
    print("有权限")
else:
    print("没权限")
    
#---------------------------------------------------------------------------
# 有一个API,要求权限具备A、B、C任意一项就可访问,用户权限是B、C、D,判断用户是否能够访问该API

# API集合A，权限集合P
# A & P != {} 就可以
# A.isdisjoint(P) == False 表示有交集


A = {'A','B','C'}
P = {'B','C','D'}
if A & P == set():
    print("没有权限")
else:
    print("有权限")
	

#---------------------------------------------------------------------------

A = {'A','B','C'}
P = {'B','C','D'}
if A & P != set():
    print("有权限")
else:
    print("没有权限")
	
	
#---------------------------------------------------------------------------

A = {'A','B','C'}
P = {'B','C','D'}
if A.isdisjoint(P):
    print("没有")
else:
    print("有")
    
    
#---------------------------------------------------------------------------
# 一个总任务列表，存储所有任务。一个完成的任务列表。找出为未完成的任务

# 业务中，任务ID一般不可以重复
# 所有任务ID放到一个set中，假设为ALL
# 所有已完成的任务ID放到一个set中，假设为COMPLETED，它是ALL的子集
# ALL - COMPLETED = UNCOMPLETED


ALL = {'a','b','c','d'}    # 总任务
COMPLETED = {'a','b'}    # 已完成的任务
UNCOMPLETED = ALL - COMPLETED    # 未完成的任务
print(UNCOMPLETED)
